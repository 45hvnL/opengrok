fzf		# 23:package fzf
Reader		# 36:type Reader
pusher
byte
bool
eventBox
util
EventBox
delimNil
bool
event
int32
NewReader	# 44:func NewReader(
pusher
byte
bool
eventBox
util
EventBox
delimNil
bool
Reader
Reader
pusher
eventBox
delimNil
int32
EvtReady
r		# 48:func (r
Reader
startEventPoller
ptr
r
event
pollInterval
readerPollIntervalMin
atomic
CompareAndSwapInt32
ptr
int32
EvtReadNew
int32
EvtReady
r
eventBox
Set
EvtReadNew
true
pollInterval
readerPollIntervalMin
atomic
LoadInt32
ptr
int32
EvtReadFin
pollInterval
readerPollIntervalStep
pollInterval
readerPollIntervalMax
pollInterval
readerPollIntervalMax
time
Sleep
pollInterval
r		# 69:func (r
Reader
fin
success
bool
atomic
StoreInt32
r
event
int32
EvtReadFin
r
eventBox
Set
EvtReadFin
success
r		# 75:func (r
Reader
ReadSource
r
startEventPoller
success
bool
util
IsTty
cmd
os
Getenv
len
cmd
success
r
readFromCommand
defaultCommand
success
r
readFromCommand
cmd
success
r
readFromStdin
r
fin
success
r		# 92:func (r
Reader
feed
src
io
Reader
delim
byte
r
delimNil
delim
reader
bufio
NewReaderSize
src
readerBufferSize
bytea
err
reader
ReadBytes
delim
byteaLen
len
bytea
byteaLen
byteaLen
err
nil
util
IsWindows
byteaLen
bytea
byteaLen
byte
bytea
bytea
byteaLen
bytea
bytea
byteaLen
r
pusher
bytea
atomic
StoreInt32
r
event
int32
EvtReadNew
err
nil
r		# 122:func (r
Reader
readFromStdin
bool
r
feed
os
Stdin
true
r		# 127:func (r
Reader
readFromCommand
shell
string
cmd
string
bool
listCommand
util
ExecCommandWith
shell
cmd
out
err
listCommand
StdoutPipe
err
nil
false
err
listCommand
Start
err
nil
false
r
feed
out
listCommand
Wait
nil
